====== tuiValidatorImage ======

===== What it is =====

This is an extension of the standard sfValidatorFile validator that checks an uploaded image fits within a min/max width and height. It's written for symfony 1.4
===== Where to find it =====

Code: http://fs1/svn/tuiValidatorImage/trunk
Docs: http://useful/wiki/code/tuivalidatorimage

===== How to use it =====

  * Copy the file into your project's lib folder (or use an svn:externals property)
  * Available Options
    * path - where to save the uploaded file (required)
    * mime_types - acceptable files, 'web_images' covers all 3 types (required)
    * required - whether to accept no file as valid or not
    * min_width - Minimum allowed width for the image
    * max_width - Maximum allowed width for the image
    * min_height - Minimum allowed width for the image
    * max_height - Maximum allowed width for the image
    * ratio
      * array(w,h) - specifies the width to height ratio
      * 'square' - specifies the image must be square
  * In your form class, override the validator for the image widget. Here's an example for using max and min sizes, including the upload/edit/delete widget:
<code php>
      if ($this->getObject()->menu_image) {
        $this->setWidget('menu_image', new sfWidgetFormInputFileEditable(array(
          'file_src'      => '/'.basename(sfConfig::get('sf_upload_dir')).'/'.$this->getObject()->menu_image,
          'edit_mode'     => !$this->isNew(),
          'is_image'      => true,
          'with_delete'   => true,
          'delete_label'  => 'Remove this image',
        )));
        $this->setValidator('menu_image_delete', new sfValidatorBoolean());
      } else {
        $this->setWidget('menu_image', new sfWidgetFormInputFile());
      }

      $this->setValidator('menu_image', new tuiValidatorImage(
        array(
          'mime_types' => 'web_images',
          'path'       => sfConfig::get('sf_upload_dir'),
          'required'   => false,
          'min_width'  => 100,
          'min_height' => 75,
          'max_width'  => 100,
          'max_height' => 75,
        ), 
        array('mime_types' => 'Unsupported image type. Please use JPEG, GIF, or PNG only.')
      ));
</code>

===== Notes/Known issues =====



===== Where it's been used =====

If you use it on a project, please make a note on the wiki so we can see what impact it has on current projects, and whether changing it might fuck anything up.

  * FT City Guide CMS
  * C4 WhoKnowsWho CMS (uploading images to entities, entity types and stories via the homepage editor)
